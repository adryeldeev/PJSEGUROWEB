
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password'
};

exports.Prisma.TiposDeProcessoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  activo: 'activo',
  userId: 'userId'
};

exports.Prisma.FaseProcessoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cor_fundo: 'cor_fundo',
  cor_fonte: 'cor_fonte',
  pendencia: 'pendencia',
  muda_fase: 'muda_fase',
  activo: 'activo',
  criado_em: 'criado_em',
  atualizado_em: 'atualizado_em',
  userId: 'userId'
};

exports.Prisma.PrioridadesScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cor_fundo: 'cor_fundo',
  cor_fonte: 'cor_fonte',
  activo: 'activo',
  userId: 'userId'
};

exports.Prisma.ParceiroScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  uf: 'uf',
  cidade: 'cidade',
  userId: 'userId'
};

exports.Prisma.BancoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  agencia: 'agencia',
  conta: 'conta',
  userId: 'userId'
};

exports.Prisma.SeguradoraScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  userId: 'userId'
};

exports.Prisma.TipoDeVeiculoScalarFieldEnum = {
  id: 'id',
  placa: 'placa',
  marca: 'marca',
  modelo: 'modelo',
  rcf: 'rcf',
  userId: 'userId'
};

exports.Prisma.VitimaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cpf: 'cpf',
  rg: 'rg',
  data_nascimento: 'data_nascimento',
  data_emissao: 'data_emissao',
  orgao_expedidor: 'orgao_expedidor',
  profissao: 'profissao',
  renda_mensal: 'renda_mensal',
  cep: 'cep',
  uf: 'uf',
  endereco: 'endereco',
  numero: 'numero',
  sexo: 'sexo',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  email: 'email',
  telefone01: 'telefone01',
  telefone02: 'telefone02',
  userId: 'userId'
};

exports.Prisma.ProcessoScalarFieldEnum = {
  id: 'id',
  numero: 'numero',
  tipoProcessoId: 'tipoProcessoId',
  faseProcessoId: 'faseProcessoId',
  vitimaId: 'vitimaId',
  userId: 'userId',
  status: 'status',
  criado_em: 'criado_em',
  atualizado_em: 'atualizado_em'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cpf: 'cpf',
  rg: 'rg',
  userId: 'userId'
};

exports.Prisma.PrioridadeScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cor_fundo: 'cor_fundo',
  cor_fonte: 'cor_fonte',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};


exports.Prisma.ModelName = {
  User: 'User',
  TiposDeProcesso: 'TiposDeProcesso',
  FaseProcesso: 'FaseProcesso',
  Prioridades: 'Prioridades',
  Parceiro: 'Parceiro',
  Banco: 'Banco',
  Seguradora: 'Seguradora',
  TipoDeVeiculo: 'TipoDeVeiculo',
  Vitima: 'Vitima',
  Processo: 'Processo',
  Cliente: 'Cliente',
  Prioridade: 'Prioridade'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
