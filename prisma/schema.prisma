generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  username        String
  email           String
  password        String
  banco           Banco[]
  Cliente         Cliente[]
  fasesProcesso   FaseProcesso[]
  parceiro        Parceiro[]
  Prioridade      Prioridade[]
  prioridades     Prioridades[]
  processos       Processo[]
  seguradora      Seguradora[]
  tipoDeVeiculo   TipoDeVeiculo[]
  tiposDeProcesso TiposDeProcesso[]
  vitimas         Vitima[]
}

model TiposDeProcesso {
  id       Int        @id @default(autoincrement())
  nome     String
  activo   Boolean
  userId   String
  processo Processo[]
  user     User       @relation(fields: [userId], references: [id])

  @@index([userId], map: "TiposDeProcesso_userId_fkey")
}

model FaseProcesso {
  id            Int        @id @default(autoincrement())
  nome          String
  cor_fundo     String
  cor_fonte     String
  pendencia     Boolean
  muda_fase     Boolean
  activo        Boolean
  criado_em     DateTime   @default(now())
  atualizado_em DateTime   @updatedAt
  userId        String
  user          User       @relation(fields: [userId], references: [id])
  processo      Processo[]

  @@index([userId])
}

model Prioridades {
  id        Int     @id @default(autoincrement())
  nome      String
  cor_fundo String
  cor_fonte String
  activo    Boolean
  userId    String
  user      User    @relation(fields: [userId], references: [id])

  @@index([userId], map: "Prioridades_userId_fkey")
}

model Parceiro {
  id     Int    @id @default(autoincrement())
  nome   String
  uf     String
  cidade String
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Parceiro_userId_fkey")
}

model Banco {
  id      Int    @id @default(autoincrement())
  nome    String
  agencia Int
  conta   Int
  userId  String
  user    User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Banco_userId_fkey")
}

model Seguradora {
  id     Int    @id @default(autoincrement())
  nome   String
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Seguradora_userId_fkey")
}

model TipoDeVeiculo {
  id     Int     @id @default(autoincrement())
  placa  String
  marca  String
  modelo String
  rcf    Boolean
  userId String
  user   User    @relation(fields: [userId], references: [id])

  @@index([userId], map: "TipoDeVeiculo_userId_fkey")
}

model Vitima {
  id              Int        @id @default(autoincrement())
  nome            String
  cpf             Int
  rg              Int
  data_nascimento DateTime
  data_emissao    DateTime
  orgao_expedidor String
  profissao       String
  renda_mensal    Int
  cep             Int
  uf              String
  endereco        String
  numero          Int
  sexo            String
  complemento     String
  bairro          String
  cidade          String
  email           String
  telefone01      Int
  telefone02      Int
  userId          String
  processos       Processo[]
  user            User       @relation(fields: [userId], references: [id])

  @@index([userId], map: "Vitima_userId_fkey")
}

model Processo {
  id             Int             @id @default(autoincrement())
  numero         String          @unique
  tipoProcessoId Int
  faseProcessoId Int
  vitimaId       Int
  userId         String
  status         String
  criado_em      DateTime        @default(now())
  atualizado_em  DateTime        @updatedAt
  faseProcesso   FaseProcesso    @relation(fields: [faseProcessoId], references: [id])
  tipoProcesso   TiposDeProcesso @relation(fields: [tipoProcessoId], references: [id])
  user           User            @relation(fields: [userId], references: [id])
  vitima         Vitima          @relation(fields: [vitimaId], references: [id])

  @@index([faseProcessoId], map: "Processo_faseProcessoId_fkey")
  @@index([tipoProcessoId], map: "Processo_tipoProcessoId_fkey")
  @@index([userId], map: "Processo_userId_fkey")
  @@index([vitimaId], map: "Processo_vitimaId_fkey")
}

model Cliente {
  id     Int    @id @default(autoincrement())
  nome   String
  cpf    Int
  rg     Int
  userId String
  User   User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Cliente_userId_fkey")
}

model Prioridade {
  id        Int    @id @default(autoincrement())
  nome      String
  cor_fundo String
  cor_fonte String
  userId    String
  User      User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Prioridade_userId_fkey")
}
